{"version":3,"sources":["utils/utils.js","redux/board-reducer.js","components/Board.jsx","redux/store.js","App.js","reportWebVitals.js","index.js","components/Board.module.css"],"names":["getNewBoard","X","Y","Array","fill","map","type","randInt","position","active","getActualFlow","pipe","flow","pipes","i","unshift","pop","calculateBoardPath","board","row","p","allConnectedCoords","getAllConnectedCoords","x","y","coords","coordsConnectedPipes","isConnected","x1","y1","f1","x2","y2","f2","length","push","getConnected","console","log","forEach","c","some","value","join","min","max","Math","round","random","GENERATE_BOARD","ROTATE_PIPE","positions","initialState","boardActions","column","payload","Board","useSelector","state","boardReducer","dispatch","useDispatch","useEffect","className","s","Blocks","v","Block","Active","onClick","handleClick","rootReducer","combineReducers","action","newBoard","newPosition","store","createStore","window","__store__","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.36254fac.chunk.js","sourcesContent":["import {pipes} from \"../redux/board-reducer\";\n\nexport function getNewBoard(X, Y) {\n    return Array(Y).fill('').map(() => Array(X).fill('').map(() => ({\n        type: randInt(0, 2),\n        position: randInt(0, 3),\n        active: false,\n    })))\n}\n\nexport const getActualFlow = (pipe) => { // Получить актуальный поток для трубы в соответствии с положением\n    const flow = [...pipes[pipe.type].flow];\n    for (let i = 0; i < pipe.position; i++) {\n        flow.unshift(flow.pop())\n    }\n    return flow\n}\nconst getConnected = (board, coords) => { //Вернуть координаты законнекченных труб\n    let coordsConnectedPipes = []\n    const isConnected = (x1, y1, f1, x2, y2, f2) => {\n        if (x2 < 0 || x2 > board[0].length - 1 || y2 < 0 || y2 > board.length - 1) return false\n        return !!getActualFlow(board[y1][x1])[f1] && !!getActualFlow(board[y2][x2])[f2]\n    }\n    if (isConnected(coords.x, coords.y, 1, coords.x + 1, coords.y, 3)) {\n        coordsConnectedPipes.push([coords.x + 1, coords.y])\n    }\n    if (isConnected(coords.x, coords.y, 3, coords.x - 1, coords.y, 1)) {\n        coordsConnectedPipes.push([coords.x - 1, coords.y])\n    }\n    if (isConnected(coords.x, coords.y, 2, coords.x, coords.y + 1, 0)) {\n        coordsConnectedPipes.push([coords.x, coords.y + 1])\n    }\n    if (isConnected(coords.x, coords.y, 0, coords.x, coords.y - 1, 2)) {\n        coordsConnectedPipes.push([coords.x, coords.y - 1])\n    }\n\n    return coordsConnectedPipes\n}\nexport const calculateBoardPath = (board) => {\n    board = board.map(row => row.map(p => ({...p, active: false}))) //Убрать законнекченность со всех труб\n    board[0][0].active = true\n    let allConnectedCoords = [[0, 0]]\n    let getAllConnectedCoords = (x, y) => {\n        const coords = getConnected(board, {x: x, y: y})\n        console.log('coords', coords)\n        if (coords.length > 0) {\n            coords.forEach(c => {\n                if (!allConnectedCoords.some(value => value.join() === c.join())) {\n                    allConnectedCoords.push(c)\n                    console.log('c', c, allConnectedCoords)\n                    getAllConnectedCoords(c[0], c[1])\n                }\n            })\n        }\n    }\n    getAllConnectedCoords(0, 0)\n    console.log('allConnectedCoords', allConnectedCoords)\n    allConnectedCoords.forEach(coords => {\n        board[coords[1]][coords[0]].active = true\n    })\n    return board\n}\nconst randInt = (min, max) => Math.round(min - 0.5 + Math.random() * (max - min + 1))\n","import {calculateBoardPath, getActualFlow, getNewBoard} from \"../utils/utils\";\n\nconst GENERATE_BOARD = 'board/GENERATE_BOARD'\nconst ROTATE_PIPE = 'board/ROTATE_PIPE'\n\n\nexport const pipes = [\n    {positions: ['─', '│', '─', '│',], flow: [0, 1, 0, 1]},\n    {positions: ['┤', '┴', '├', '┬',], flow: [1, 0, 1, 1]},\n    {positions: ['└', '┌', '┐', '┘',], flow: [1, 1, 0, 0]},\n]\n\n\nconst initialState = {\n    board: [[], []],\n    pipes: pipes,\n\n}\n\n\nexport const boardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GENERATE_BOARD: {\n            return {...state, board: calculateBoardPath(getNewBoard(30, 10))};\n        }\n        case ROTATE_PIPE:\n            const {row,column} = action.payload\n            const newBoard = state.board.map(v => [...v])\n            const newPosition = (newBoard[row][column].position + 1) % 4\n            newBoard[row][column].position = newPosition\n            console.log(getActualFlow(newBoard[row][column]))\n            return {\n                ...state,\n                board: calculateBoardPath(newBoard, pipes),\n            }\n        default:\n            return state\n    }\n}\n\nexport const boardActions = {\n    generateBoard: () => ({\n        type: GENERATE_BOARD,\n    }),\n    rotatePipe: (row, column) => ({\n        type: ROTATE_PIPE, payload: {row, column}\n    }),\n\n}\n","import React, {useEffect,} from 'react';\nimport s from './Board.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {boardActions,} from \"../redux/board-reducer\";\n\n\n\nconst Board = () => {\n    const board = useSelector(state => state.boardReducer.board)\n    const pipes = useSelector(state => state.boardReducer.pipes)\n\n    const dispatch = useDispatch()\n\n    // console.log(board)\n\n    useEffect(() => {\n        dispatch(boardActions.generateBoard())\n    }, [dispatch])\n\n\n    const  handleClick= (row, column) => {\n        dispatch(boardActions.rotatePipe(row, column))\n    }\n\n    return (\n        <div className={s.Blocks}>\n            {board.length > 5 && board.map((v, row) => {\n                return <div key={row}>{v.map((v, column) => {\n                    return <span className={`${s.Block} ${v.active && s.Active}`}\n                                 key={column}\n                                 onClick={() => handleClick(row, column)}>{pipes[v.type].positions[v.position]}</span>\n                })}</div>\n            })}\n\n        </div>\n    );\n};\n\nexport default Board;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {boardReducer} from \"./board-reducer\";\n\n\n\nconst rootReducer = combineReducers({\n    boardReducer\n})\n\nconst store = createStore(rootReducer)\n\nwindow.__store__ = store\nexport default store\n","import './App.css';\nimport Board from \"./components/Board\";\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\n\nfunction App() {\n\n    return (\n        <Provider store={store}>\n            <div className=\"App\">\n                <Board/>\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Blocks\":\"Board_Blocks__3l33g\",\"Block\":\"Board_Block__3SvZL\",\"Active\":\"Board_Active__2KdTS\"};"],"sourceRoot":""}